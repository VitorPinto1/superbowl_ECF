name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t vitorpinto500/superbowl:latest .

      # Étape pour lancer les tests dans une instance éphémère du container
      - name: Run tests inside container
        run: docker run --rm -d -p 8080:5001 --name superbowl-test vitorpinto500/superbowl:latest pytest
      
      - name: Wait for tests to finish
        run: sleep 10

      - name: Stop test container
        run: docker stop superbowl-test || true

      #Ensuite, pour les tests d'intégration : démarrer l'application et vérifier qu'elle répond
      - name: Run container for integration test
        run: |
          docker run --rm -d -p 8080:5001 --name superbowl-int vitorpinto500/superbowl:latest
          timeout=30
          until curl --fail http://localhost:8080; do
            echo "Esperando a que la aplicación esté disponible..."
            sleep 1
            timeout=$((timeout - 1))
            if [ $timeout -le 0 ]; then
              echo "Timeout: La aplicación no respondió a tiempo"
              exit 1
            fi
          done

   #   - name: Vérifier que l'application répond
    #    run: |
     #     curl --fail http://localhost:8080 || (echo "L'application ne répond pas" && exit 1)



      - name: Stop container
        run: docker stop superbowl-int

      # Installation de flyctl pour le déploiement sur Fly.io
      - name: Install Flyctl
        if: github.ref == 'refs/heads/main' 
        run: |
          curl -L https://fly.io/install.sh | sh
          echo "$HOME/.fly/bin" >> $GITHUB_PATH

      
       # Déploiement sur Fly.io
      - name: Deploy to Fly.io
        if: github.ref == 'refs/heads/main'
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
